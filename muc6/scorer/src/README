Files in this directory:

Miscellaneous header files:
cdefs.h
muc.h
muc_defs.h
muc_globals.h
muc_protos.h
sysdefs.h


TABLE abstract data type stuff:
a_list.c
a_list.h
hash.c
hash.h
list.c
table.c
table.h
tree.c
variables.c


Scorer data structure handling stuff:

alt_fill_set.c
back_pointer.c
catalog_entry.c
class_def.c
class_inst.c
class_instlst.c
class_score.c
file_section.c
inst_pair.c
inst_pairs.c
option.c
pointer.c
root.c
set_fill_def.c
set_hier_def.c
slot_def.c
slot_fill.c
slot_score.c
string_fill.c
tallies.c


Various types of input parsing stuff:

config.l
config.y
mapconfig.l
mapconfig.y
markup.l
parsers.c
slotconfig.l
slotconfig.y
template.l
template.y
text.l
text.y


Report writing stuff:

map_history.c
score_report.c


Utilities:

formulae.c	-- f, overgeneration, etc.
muc_strings.c   -- string comparison functions


Alignment ("mapping") stuff:

connect.c	-- align the unmapped "leftover" objects
map.c



Miscellaneous stuff:

in_and_out.c	-- in MUC6, two in_and_out objects could be equal. 
init_muc.c	
muc.c           -- holds the main() function
muc_globals.c
rm_opt_insts.c	-- after mapping but before scoring, remove unmapped
                       optional instances
score.c         -- tally up the correct, incorrect, etc. fills


Other files:

l.*.c -- output of Lex files  *.l
y.*.c -- output of Yacc files *.y


***************************************************************


ADDING DOCUMENT SECTIONS -- 

In the NE task, which "section" an NE object (TIMEX, NUMEX, ENAMEX) came
from is noted for reporting purposes.  The sections vary with the source
texts.  For instance, the Wall Street Journal sections of interest are HL,
DD, SO, DATELINE, TXT, but New York Times sections are SLUG, DATE,
PREAMBLE, TEXT, and TRAILER.  If you are using a source with some other
section you are interested in, here is how to make the scorer "see" the
section:

Say the section's tag id string is "AUTHOR".

1.  In the file markup.l, add the string "AUTHOR" to the array non_muc_tags

2.  In the file muc_defs.h, add the constant AUTHOR to the list of section
name constants.  Renumber the constants, but LEAVE THE CONSTANT "IGNORE" AT
THE END OF THE LIST OF #defines!!!

3.  define the AUTHOR_tallies variable in the file muc_globals.c

4.  declare the AUTHOR_tallies variable in the file muc_globals.h

5.  initialize the AUTHOR_tallies variable in the file init_muc.c

6.  add a tallies_combine call in the functions

	add_to_ne_doc_section_tallies 

    and 

	subtract_from_ne_doc_section_tallies

    in the file score_report.c

7.  add a format_tallies call to display_ne_doc_section_score in the file
score_report.c. 



Hopefully, I'll have time to make this unnecessary soon by adding a
configuration option.